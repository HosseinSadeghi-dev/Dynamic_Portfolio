@use '@angular/material' as mat;
@import "assets/scss/font";

// Foreground Elements

// Light Theme Text
$dark-text: #000000;
$dark-primary-text: rgba($dark-text, 0.87);
$dark-accent-text: rgba($dark-primary-text, 0.54);
$dark-disabled-text: rgba($dark-primary-text, 0.38);
$dark-dividers: rgba($dark-primary-text, 0.12);
$dark-focused: rgba($dark-primary-text, 0.12);

$mat-light-theme-foreground: (
  base: black,
  divider: $dark-dividers,
  dividers: $dark-dividers,
  disabled: $dark-disabled-text,
  disabled-button: rgba($dark-text, 0.26),
  disabled-text: $dark-disabled-text,
  elevation: black,
  secondary-text: $dark-accent-text,
  hint-text: $dark-disabled-text,
  accent-text: $dark-accent-text,
  icon: $dark-accent-text,
  icons: $dark-accent-text,
  text: $dark-primary-text,
  slider-min: $dark-primary-text,
  slider-off: rgba($dark-text, 0.26),
  slider-off-active: $dark-disabled-text,
);

// Dark Theme text
$light-text: #ffffff;
$light-primary-text: $light-text;
$light-accent-text: rgba($light-primary-text, 0.7);
$light-disabled-text: rgba($light-primary-text, 0.5);
$light-dividers: rgba($light-primary-text, 0.12);
$light-focused: rgba($light-primary-text, 0.12);

$mat-dark-theme-foreground: (
  base: $light-text,
  divider: $light-dividers,
  dividers: $light-dividers,
  disabled: $light-disabled-text,
  disabled-button: rgba($light-text, 0.3),
  disabled-text: $light-disabled-text,
  elevation: black,
  hint-text: $light-disabled-text,
  secondary-text: $light-accent-text,
  accent-text: $light-accent-text,
  icon: $light-text,
  icons: $light-text,
  text: $light-text,
  slider-min: $light-text,
  slider-off: rgba($light-text, 0.3),
  slider-off-active: rgba($light-text, 0.3),
);

// Background config
// Light bg
$light-background: #fafafa;
$light-bg-darker-5: darken($light-background, 5%);
$light-bg-darker-10: darken($light-background, 10%);
$light-bg-darker-20: darken($light-background, 20%);
$light-bg-darker-30: darken($light-background, 30%);
$light-bg-lighter-5: lighten($light-background, 5%);
$dark-bg-tooltip: lighten(#2c2c2c, 20%);
$dark-bg-alpha-4: rgba(#2c2c2c, 0.04);
$dark-bg-alpha-12: rgba(#2c2c2c, 0.12);

$mat-light-theme-background: (
  background: $light-background,
  status-bar: $light-bg-darker-20,
  app-bar: $light-bg-darker-5,
  hover: $dark-bg-alpha-4,
  card: $light-bg-lighter-5,
  dialog: $light-bg-lighter-5,
  tooltip: $dark-bg-tooltip,
  disabled-button: $dark-bg-alpha-12,
  raised-button: $light-bg-lighter-5,
  focused-button: $dark-focused,
  selected-button: $light-bg-darker-20,
  selected-disabled-button: $light-bg-darker-30,
  disabled-button-toggle: $light-bg-darker-10,
  unselected-chip: $light-bg-darker-10,
  disabled-list-option: $light-bg-darker-10,
);

// Dark bg
$dark-background: #2c2c2c;
$dark-bg-lighter-5: lighten($dark-background, 5%);
$dark-bg-lighter-10: lighten($dark-background, 10%);
$dark-bg-lighter-20: lighten($dark-background, 20%);
$dark-bg-lighter-30: lighten($dark-background, 30%);
$light-bg-alpha-4: rgba(#fafafa, 0.04);
$light-bg-alpha-12: rgba(#fafafa, 0.12);

// Background palette for dark themes.
$mat-dark-theme-background: (
  background: $dark-background,
  status-bar: $dark-bg-lighter-20,
  app-bar: $dark-bg-lighter-5,
  hover: $light-bg-alpha-4,
  card: $dark-bg-lighter-5,
  dialog: $dark-bg-lighter-5,
  tooltip: $dark-bg-lighter-20,
  disabled-button: $light-bg-alpha-12,
  raised-button: $dark-bg-lighter-5,
  focused-button: $light-focused,
  selected-button: $dark-bg-lighter-20,
  selected-disabled-button: $dark-bg-lighter-30,
  disabled-button-toggle: $dark-bg-lighter-10,
  unselected-chip: $dark-bg-lighter-20,
  disabled-list-option: $dark-bg-lighter-10,
);

.custom-font {
  $fontConfig: (
    display-4: mat.define-typography-level(112px, 112px, 300, var(--font-family), -0.0134em),
    display-3: mat.define-typography-level(56px, 56px, 400, var(--font-family), -0.0089em),
    display-2: mat.define-typography-level(45px, 48px, 400, var(--font-family), 0.0000em),
    display-1: mat.define-typography-level(34px, 40px, 400, var(--font-family), 0.0074em),
    headline: mat.define-typography-level(24px, 32px, 400, var(--font-family), 0.0000em),
    title: mat.define-typography-level(20px, 32px, 500, var(--font-family), 0.0075em),
    subheading-2: mat.define-typography-level(16px, 28px, 400, var(--font-family), 0.0094em),
    subheading-1: mat.define-typography-level(15px, 24px, 500, var(--font-family), 0.0067em),
    body-2: mat.define-typography-level(14px, 24px, 500, var(--font-family), 0.0179em),
    body-1: mat.define-typography-level(14px, 20px, 400, var(--font-family), 0.0179em),
    button: mat.define-typography-level(14px, 14px, 500, var(--font-family), 0.0893em),
    caption: mat.define-typography-level(12px, 20px, 400, var(--font-family), 0.0333em),
    input: mat.define-typography-level(inherit, 1.125, 400, var(--font-family), 1.5px)
  );
  @include mat.core($fontConfig);
}

.light-theme {

  body {
    --custom-primary-color: var(--custom-primary-color);
    --primary-lighter-color: var(--custom-primary-color);
    --primary-darker-color: var(--custom-primary-color);
    --text-primary-color: #{$light-primary-text};
    --text-primary-lighter-color: #{$light-primary-text};
    --text-primary-darker-color: #{$light-primary-text};
  }

  $custom-mat-primary: (
    main: var(--custom-primary-color),
    lighter: var(--custom-primary-color),
    darker: var(--custom-primary-color),
    200: var(--custom-primary-color), // For slide toggle,
    contrast : (
      main: $light-primary-text,
      lighter: $light-primary-text,
      darker: $light-primary-text,
    )
  );
  $custom-theme-primary: mat.define-palette($custom-mat-primary, main, lighter, darker);

  body {
    --custom-accent-color: var(--custom-accent-color);
    --accent-lighter-color: var(--custom-accent-color);
    --accent-darker-color: var(--custom-accent-color);
    --text-accent-color: #{$light-primary-text};
    --text-accent-lighter-color: #{$dark-primary-text};
    --text-accent-darker-color: #{$light-primary-text};
  }

  $custom-mat-accent: (
    main: var(--custom-accent-color),
    lighter: var(--custom-accent-color),
    darker: var(--custom-accent-color),
    200: var(--custom-accent-color), // For slide toggle,
    contrast : (
      main: $light-primary-text,
      lighter: $dark-primary-text,
      darker: $light-primary-text,
    )
  );
  $custom-theme-accent: mat.define-palette($custom-mat-accent, main, lighter, darker);

  body {
    --warn-color: #ff0000;
    --warn-lighter-color: #ffb3b3;
    --warn-darker-color: #ff0000;
    --text-warn-color: #{$light-primary-text};
    --text-warn-lighter-color: #{$dark-primary-text};
    --text-warn-darker-color: #{$light-primary-text};
  }

  $mat-warn: (
    main: #ff0000,
    lighter: #ffb3b3,
    darker: #ff0000,
    200: #ff0000, // For slide toggle,
    contrast : (
      main: $light-primary-text,
      lighter: $dark-primary-text,
      darker: $light-primary-text,
    )
  );
  $theme-warn: mat.define-palette($mat-warn, main, lighter, darker);

  $dark-theme: (
    primary: $custom-theme-primary,
    accent: $custom-theme-accent,
    warn: $theme-warn,
    is-dark: false,
    foreground: $mat-light-theme-foreground,
    background: $mat-light-theme-background,
  );

  @include mat.all-component-themes($dark-theme);
}

.dark-theme {

  body {
    --custom-primary-color: var(--custom-primary-color);
    --primary-lighter-color: var(--custom-primary-color);
    --primary-darker-color: var(--custom-primary-color);
    --text-primary-color: #{$dark-primary-text};
    --text-primary-lighter-color: #{$dark-primary-text};
    --text-primary-darker-color: #{$dark-primary-text};
  }

  $custom-mat-primary: (
    main: var(--custom-primary-color),
    lighter: var(--custom-primary-color),
    darker: var(--custom-primary-color),
    200: var(--custom-primary-color), // For slide toggle,
    contrast : (
      main: $dark-primary-text,
      lighter: $dark-primary-text,
      darker: $dark-primary-text,
    )
  );
  $custom-theme-primary: mat.define-palette($custom-mat-primary, main, lighter, darker);

  body {
    --custom-accent-color: var(--custom-accent-color);
    --accent-lighter-color: var(--custom-accent-color);
    --accent-darker-color: var(--custom-accent-color);
    --text-accent-color: #{$dark-primary-text};
    --text-accent-lighter-color: #{$light-primary-text};
    --text-accent-darker-color: #{$dark-primary-text};
  }

  $custom-mat-accent: (
    main: var(--custom-accent-color),
    lighter: var(--custom-accent-color),
    darker: var(--custom-accent-color),
    200: var(--custom-accent-color), // For slide toggle,
    contrast : (
      main: $dark-primary-text,
      lighter: $light-primary-text,
      darker: $dark-primary-text,
    )
  );
  $custom-theme-accent: mat.define-palette($custom-mat-accent, main, lighter, darker);

  body {
    --warn-color: #ff0000;
    --warn-lighter-color: #ffb3b3;
    --warn-darker-color: #ff0000;
    --text-warn-color: #{$dark-primary-text};
    --text-warn-lighter-color: #{$light-primary-text};
    --text-warn-darker-color: #{$dark-primary-text};
  }

  $mat-warn: (
    main: #ff0000,
    lighter: #ffb3b3,
    darker: #ff0000,
    200: #ff0000, // For slide toggle,
    contrast : (
      main: $dark-primary-text,
      lighter: $light-primary-text,
      darker: $dark-primary-text,
    )
  );
  $theme-warn: mat.define-palette($mat-warn, main, lighter, darker);

  $dark-theme: (
    primary: $custom-theme-primary,
    accent: $custom-theme-accent,
    warn: $theme-warn,
    is-dark: true,
    foreground: $mat-dark-theme-foreground,
    background: $mat-dark-theme-background,
  );

  @include mat.all-component-themes($dark-theme);
}


html, body {
  margin: 0;
  min-height: 100%;
  scroll-behavior: smooth;
  box-sizing: border-box;
}

* {
  outline: none;
}

button:focus {
  outline: unset !important;
}

a {
  text-decoration: none !important;
  cursor: pointer;
}

a.disabled {
  cursor: default;
  opacity: 0.35;
  pointer-events: none;
}

del {
  text-decoration-style: solid;
  text-decoration-thickness: 2px;
  text-decoration-color: red !important;
}

::-webkit-scrollbar {
  width: 5px;
  height: 4px;
}

/* Track */
::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: var(--custom-primary-color);
}

.mat-form-field {
  letter-spacing: 0 !important;
}

.mat-form-field-wrapper {
  padding-bottom: 0 !important;
}

.mat-form-field-subscript-wrapper {
  position: relative !important;
}

.mat-stroked-button.mat-primary:not(.mat-button-disabled) {
  border-color: var(--custom-primary-color) !important;
}

.mat-stroked-button.mat-accent:not(.mat-button-disabled) {
  border-color: var(--custom-accent-color) !important;
}

.mat-stroked-button.mat-warn:not(.mat-button-disabled) {
  border-color: red !important;
}

.material-icons {
  font-size: 24px;
  font-family: 'Material Icons Round', 'Material Icons', serif;

  .mat-badge-content {
    font-family: var(--font-family);
  }
}

.mat-icon-size {
  $size: var(--mat-size);
  font-size: $size !important;
  width: $size !important;
  height: $size !important;
}

.cdk-overlay-pane {
  max-height: 99vh !important;
}

table {
  width: 100%;
  overflow-x: auto;
  white-space: nowrap;
  display: table;

  @media screen and (max-width: 959px) {
    display: block !important;
  }

  tr:nth-child(even) {
    background-color: #EEEEEE !important;
  }

  th {
    color: var(--custom-primary-color) !important;
    font-weight: 700 !important;
    font-size: 1em !important;
    border-bottom: 2px solid var(--custom-primary-color) !important;
    text-align: center !important;
    padding: 0 10px !important;
  }

  td {
    text-align: center !important;
  }

  td.mat-cell {
    padding: 0 10px !important;
  }

  .mat-sort-header-container {
    justify-content: center !important;
  }

}

mat-hint {
  letter-spacing: normal !important;
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.dark-theme .mat-flat-button.mat-primary, .dark-theme .mat-raised-button.mat-primary, .dark-theme .mat-fab.mat-primary, .dark-theme .mat-mini-fab.mat-primary {
  color: white !important;
}


////////////////////// custom scss ////////////////////

.validSnackBar {
  background-color: darkgreen !important;
  color: white !important;
}

.errorSnackBar {
  background-color: darkred !important;
  color: white !important;
}

.warningSnackBar {
  background-color: yellow !important;
  color: black !important;
}

.clickable {
  cursor: pointer;
}

.mat-tab-header-pagination-chevron {
  border-color: white !important;
}

.active-header-link {
  font-weight: bold;
  color: var(--custom-primary-color) !important;
}

.section-title {
  position: relative;

  .title-bg {
    color: rgba(0, 0, 0, 0.07);
    font-size: 110px;
    font-weight: 800;
    letter-spacing: 10px;
    line-height: 0.7;
    position: absolute;
    text-transform: uppercase;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

@keyframes shake {
  2% {
    transform: translate(2.5px, 1.5px) rotate(-0.5deg)
  }
  4% {
    transform: translate(2.5px, 0.5px) rotate(-0.5deg)
  }
  6% {
    transform: translate(2.5px, 0.5px) rotate(0.5deg)
  }
  8% {
    transform: translate(2.5px, 2.5px) rotate(1.5deg)
  }
  10% {
    transform: translate(1.5px, -1.5px) rotate(-0.5deg)
  }
  12% {
    transform: translate(-1.5px, 0.5px) rotate(0.5deg)
  }
  14% {
    transform: translate(0.5px, 1.5px) rotate(-0.5deg)
  }
  16% {
    transform: translate(-1.5px, 0.5px) rotate(0.5deg)
  }
  18% {
    transform: translate(1.5px, -1.5px) rotate(0.5deg)
  }
  20% {
    transform: translate(2.5px, 1.5px) rotate(-0.5deg)
  }
  22% {
    transform: translate(0.5px, -1.5px) rotate(1.5deg)
  }
  24% {
    transform: translate(0.5px, -0.5px) rotate(-0.5deg)
  }
  26% {
    transform: translate(0.5px, -1.5px) rotate(1.5deg)
  }
  28% {
    transform: translate(0.5px, 0.5px) rotate(0.5deg)
  }
  30% {
    transform: translate(2.5px, 0.5px) rotate(0.5deg)
  }
  32% {
    transform: translate(-0.5px, 0.5px) rotate(0.5deg)
  }
  34% {
    transform: translate(2.5px, 0.5px) rotate(-0.5deg)
  }
  36% {
    transform: translate(0.5px, 2.5px) rotate(0.5deg)
  }
  38% {
    transform: translate(-0.5px, 0.5px) rotate(-0.5deg)
  }
  40% {
    transform: translate(-1.5px, 1.5px) rotate(-0.5deg)
  }
  42% {
    transform: translate(1.5px, 2.5px) rotate(-0.5deg)
  }
  44% {
    transform: translate(-0.5px, 0.5px) rotate(-0.5deg)
  }
  46% {
    transform: translate(2.5px, 1.5px) rotate(-0.5deg)
  }
  48% {
    transform: translate(-1.5px, 2.5px) rotate(1.5deg)
  }
  50% {
    transform: translate(-0.5px, -1.5px) rotate(-0.5deg)
  }
  52% {
    transform: translate(-1.5px, 1.5px) rotate(1.5deg)
  }
  54% {
    transform: translate(-1.5px, -1.5px) rotate(-0.5deg)
  }
  56% {
    transform: translate(2.5px, 1.5px) rotate(0.5deg)
  }
  58% {
    transform: translate(-1.5px, -1.5px) rotate(0.5deg)
  }
  60% {
    transform: translate(1.5px, 0.5px) rotate(0.5deg)
  }
  62% {
    transform: translate(-0.5px, -1.5px) rotate(1.5deg)
  }
  64% {
    transform: translate(0.5px, 1.5px) rotate(-0.5deg)
  }
  66% {
    transform: translate(-0.5px, 2.5px) rotate(0.5deg)
  }
  68% {
    transform: translate(2.5px, 2.5px) rotate(1.5deg)
  }
  70% {
    transform: translate(1.5px, -1.5px) rotate(0.5deg)
  }
  72% {
    transform: translate(0.5px, 2.5px) rotate(-0.5deg)
  }
  74% {
    transform: translate(0.5px, -1.5px) rotate(1.5deg)
  }
  76% {
    transform: translate(-0.5px, 0.5px) rotate(0.5deg)
  }
  78% {
    transform: translate(1.5px, -0.5px) rotate(0.5deg)
  }
  80% {
    transform: translate(-0.5px, 2.5px) rotate(-0.5deg)
  }
  82% {
    transform: translate(-1.5px, 0.5px) rotate(1.5deg)
  }
  84% {
    transform: translate(-1.5px, 2.5px) rotate(-0.5deg)
  }
  86% {
    transform: translate(1.5px, -0.5px) rotate(0.5deg)
  }
  88% {
    transform: translate(-1.5px, 0.5px) rotate(0.5deg)
  }
  90% {
    transform: translate(0.5px, 0.5px) rotate(0.5deg)
  }
  92% {
    transform: translate(0.5px, -1.5px) rotate(-0.5deg)
  }
  94% {
    transform: translate(0.5px, 0.5px) rotate(-0.5deg)
  }
  96% {
    transform: translate(2.5px, 2.5px) rotate(1.5deg)
  }
  98% {
    transform: translate(1.5px, 2.5px) rotate(0.5deg)
  }
  0%, 100% {
    transform: translate(0, 0) rotate(0)
  }
}

@keyframes flicker {
  20% {
    opacity: .1
  }
  23% {
    opacity: 0
  }
  26% {
    opacity: .15
  }
  30% {
    opacity: 0
  }
  35% {
    opacity: .2
  }
  38% {
    opacity: .1
  }
  100% {
    opacity: .4
  }
}
